



type Chat {

}



type Post {
  poster: User!
  text: String!
  timestamp: String!
  likes: Int!
  comments: [Comment!]!
  images: [String!]!
}

type Comment {

}

comments: [{
    commenter: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User' 
    },
    text: {
      type: String,
      required: true,
      validate: {
        validator: function(text) {
            return text.length > 0 && text.length < 512;
        },
        message: 'Comment must meet the length requirements.'
      }
    },
    timestamp: {
      type: Date,
      required: true
    },
    likes: {
      type: Number,
      required: true,
      default: 0
    },
    replies: [{
      replier: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'User' 
      },
      text: {
        type: String,
        required: true,
        validate: {
          validator: function(text) {
              return text.length > 0 && text.length < 512;
          },
          message: 'Comment must meet the length requirements.'
        }
      },
      timestamp: {
        type: Date,
        default: Date.now
      },
      likes: {
        type: Number,
        required: true,
        default: 0
      },
    }]
  }],

type User {
  username: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  dob: String!
  bio: String
  picture: String
  chats: [Chat]
  posts: [Post]
  followers: [User]
  following: [User]
}